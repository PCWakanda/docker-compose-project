services:
  eureka-server:
    build:
      context: C:\Users\nsfgo\OneDrive\Documentos\GitHub\server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - eureka-network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    networks:
      - eureka-network

  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: P4ssword!
      MYSQL_DATABASE: my-app
    networks:
      - eureka-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  mysql2:
    image: mysql:8.0
    ports:
      - "3312:3306"
    environment:
      MYSQL_ROOT_PASSWORD: P4ssword!
      MYSQL_DATABASE: my-app
    networks:
      - eureka-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  microservicio1:
    build:
      context: C:\Users\nsfgo\OneDrive\Documentos\GitHub\Microservicio1
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: user
      SPRING_RABBITMQ_PASSWORD: password
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/my-app
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: P4ssword!
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: prometheus
      MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED: true
      MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED: true
    depends_on:
      mysql:
        condition: service_healthy
      eureka-server:
        condition: service_started
      rabbitmq:
        condition: service_started
    networks:
      - eureka-network

  microservicio2:
    build:
      context: C:\Users\nsfgo\OneDrive\Documentos\GitHub\Microservicio2
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: prometheus
      MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED: true
      MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED: true
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql2:3306/my-app
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: P4ssword!
    depends_on:
      eureka-server:
        condition: service_started
      mysql2:
        condition: service_healthy
    networks:
      - eureka-network

  microservicio4:
    build:
      context: C:\Users\nsfgo\OneDrive\Documentos\GitHub\Microservicio4
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql4:3306/my-app
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: P4ssword!
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: prometheus
      MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED: true
      MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED: true
    depends_on:
      eureka-server:
        condition: service_started
      mysql4:
        condition: service_healthy
    networks:
      - eureka-network

  mysql4:
    image: mysql:8.0
    ports:
      - "3314:3306"
    environment:
      MYSQL_ROOT_PASSWORD: P4ssword!
      MYSQL_DATABASE: my-app
    networks:
      - eureka-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  microservicio5:
    build:
      context: C:\Users\nsfgo\OneDrive\Documentos\GitHub\Microservicio5
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql5:3306/my-app
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: P4ssword!
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: prometheus
      MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED: true
      MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED: true
    depends_on:
      eureka-server:
        condition: service_started
      mysql5:
        condition: service_healthy
    networks:
      - eureka-network

  mysql5:
    image: mysql:8.0
    ports:
      - "3315:3306"
    environment:
      MYSQL_ROOT_PASSWORD: P4ssword!
      MYSQL_DATABASE: my-app
    networks:
      - eureka-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5


  microservicio3:
    build:
      context: C:\Users\nsfgo\OneDrive\Documentos\GitHub\Microservicio3
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-server:8761/eureka/
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql3:3306/my-app
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: P4ssword!
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: prometheus
      MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED: true
      MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED: true
    depends_on:
      eureka-server:
        condition: service_started
      mysql3:
        condition: service_healthy
    networks:
      - eureka-network

  mysql3:
    image: mysql:8.0
    ports:
      - "3313:3306"
    environment:
      MYSQL_ROOT_PASSWORD: P4ssword!
      MYSQL_DATABASE: my-app
    networks:
      - eureka-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - eureka-network

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    networks:
      - eureka-network

networks:
  eureka-network:
    driver: bridge